name: Harmony CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: harmony-microservices
  REGION: us-central1
  USER_SERVICE_NAME: user-service
  FRONTEND_SERVICE_NAME: harmony-ui

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Test User Service
      run: |
        cd backend/user-service
        mvn clean test
    
    - name: Test Product Service
      run: |
        cd backend/product-service
        mvn clean test

  build-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build User Service
      run: |
        cd backend/user-service
        mvn clean package -DskipTests
    
    - name: Build Product Service
      run: |
        cd backend/product-service
        mvn clean package -DskipTests
    
    - name: Upload User Service Artifact
      uses: actions/upload-artifact@v4
      with:
        name: user-service-jar
        path: backend/user-service/target/*.jar
    
    - name: Upload Product Service Artifact
      uses: actions/upload-artifact@v4
      with:
        name: product-service-jar
        path: backend/product-service/target/*.jar

  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/harmony-ui/package-lock.json
    
    - name: Install Frontend Dependencies
      run: |
        cd frontend/harmony-ui
        npm ci
    
    - name: Build Frontend
      run: |
        cd frontend/harmony-ui
        npm run build
    
    - name: Upload Frontend Build
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/harmony-ui/build

  deploy-to-google-cloud:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Backend Artifacts
      uses: actions/download-artifact@v4
      with:
        name: user-service-jar
        path: backend/user-service/target/
    
    - name: Download Frontend Artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: frontend/harmony-ui/build/
    
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Configure Docker
      run: gcloud auth configure-docker us-central1-docker.pkg.dev
    
    - name: Build and Push User Service Image
      run: |
        cd backend/user-service
        docker build -t us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/harmony-repo/user-service:${{ github.sha }} .
        docker push us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/harmony-repo/user-service:${{ github.sha }}
    
    - name: Build and Push Frontend Image
      run: |
        cd frontend/harmony-ui
        docker build -t us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/harmony-repo/harmony-ui:${{ github.sha }} .
        docker push us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/harmony-repo/harmony-ui:${{ github.sha }}
    
    - name: Deploy to Cloud Run
      run: |
        # Deploy User Service
        gcloud run deploy ${{ env.USER_SERVICE_NAME }} \
          --image us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/harmony-repo/user-service:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --set-env-vars="SPRING_PROFILES_ACTIVE=prod,MONGODB_URI=${{ secrets.MONGODB_URI }},JWT_SECRET=${{ secrets.JWT_SECRET }}"
        
        # Deploy Frontend
        gcloud run deploy ${{ env.FRONTEND_SERVICE_NAME }} \
          --image us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/harmony-repo/harmony-ui:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --set-env-vars="REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}"
    
    - name: Update Cloud Run URLs
      run: |
        USER_SERVICE_URL=$(gcloud run services describe ${{ env.USER_SERVICE_NAME }} --region=${{ env.REGION }} --format='value(status.url)')
        FRONTEND_URL=$(gcloud run services describe ${{ env.FRONTEND_SERVICE_NAME }} --region=${{ env.REGION }} --format='value(status.url)')
        echo "User Service URL: $USER_SERVICE_URL"
        echo "Frontend URL: $FRONTEND_URL" 