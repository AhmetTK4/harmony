version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: harmony-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: harmony
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - harmony-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: harmony-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: harmony123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - harmony-network

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: harmony-elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - harmony-network

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: harmony-kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - harmony-network

  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: harmony-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - harmony-network

  # Eureka Server
  eureka-server:
    build:
      context: ../../backend/eureka-server
      dockerfile: Dockerfile
    container_name: harmony-eureka-server
    restart: unless-stopped
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb
    networks:
      - harmony-network

  # API Gateway
  api-gateway:
    build:
      context: ../../backend/api-gateway
      dockerfile: Dockerfile
    container_name: harmony-api-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
    networks:
      - harmony-network

  # User Service
  user-service:
    build:
      context: ../../backend/user-service
      dockerfile: Dockerfile
    container_name: harmony-user-service
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGODB_URI=mongodb://mongodb:27017/harmony_users
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - mongodb
      - eureka-server
    networks:
      - harmony-network

  # Product Service
  product-service:
    build:
      context: ../../backend/product-service
      dockerfile: Dockerfile
    container_name: harmony-product-service
    restart: unless-stopped
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGODB_URI=mongodb://mongodb:27017/harmony_products
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - mongodb
      - eureka-server
    networks:
      - harmony-network

  # Order Service
  order-service:
    build:
      context: ../../backend/order-service
      dockerfile: Dockerfile
    container_name: harmony-order-service
    restart: unless-stopped
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MONGODB_URI=mongodb://mongodb:27017/harmony_orders
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=harmony123
    depends_on:
      - mongodb
      - rabbitmq
      - eureka-server
    networks:
      - harmony-network

  # Notification Service
  notification-service:
    build:
      context: ../../backend/notification-service
      dockerfile: Dockerfile
    container_name: harmony-notification-service
    restart: unless-stopped
    ports:
      - "8084:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=harmony123
    depends_on:
      - rabbitmq
      - eureka-server
    networks:
      - harmony-network

  # Frontend React App
  harmony-ui:
    build:
      context: ../../frontend/harmony-ui
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:8080/api
        - REACT_APP_ENVIRONMENT=development
        - REACT_APP_VERSION=1.0.0
    container_name: harmony-ui
    restart: unless-stopped
    ports:
      - "3000:8080"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
      - REACT_APP_ENVIRONMENT=development
    depends_on:
      - api-gateway
    networks:
      - harmony-network

volumes:
  mongodb_data:
  rabbitmq_data:
  elasticsearch_data:
  redis_data:

networks:
  harmony-network:
    driver: bridge 